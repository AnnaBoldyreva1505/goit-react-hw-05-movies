{"version":3,"file":"static/js/526.1062b14b.chunk.js","mappings":"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","sources":["api.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js","pages/Home/Home.styled.js","pages/Home/Home.js"],"sourcesContent":["// const API_Key = 'b6e9665514428b2c0f9442130a42f46a';\n// const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n\n// // Documentation: https://developers.themoviedb.org/3/getting-started/introduction\n\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'b6e9665514428b2c0f9442130a42f46a';\n\nexport const fetchMovies = () => {\n  return axios('trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n};\n\nexport const fetchForMoviesPage = (query) => {\n  return axios(`search/movie?&query=${query}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n};\n\nexport const fetchForMoviesDetalis = (movieId) => {\n  return axios(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n};\n\nexport const fetchCast = (movieId) => {\n  return axios(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n};\n\n\n\nexport const fetchReviews = (movieId) => {\n  return axios(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n};\n\n\n\n\n\n\n// /trending/get-trending список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n// /search/search-movies поиск кинофильма по ключевому слову на странице фильмов.\n// /movies/get-movie-details запрос полной информации о фильме для страницы кинофильма.\n// /movies/get-movie-credits запрос информации о актёрском составе для страницы кинофильма.\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма.","import styled from 'styled-components';\n\nexport const FilmsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(0, 1fr));\n  flex-wrap: wrap;\n  gap: 30px 20px;\n  margin-bottom: 80px;\n  justify-items: center;\n  padding: 0 40px;\n`;\n\nexport const FilmsItem = styled.li`\n  position: relative;\n  top: 0;\n  transition: top 0.2s;\n`;\n\nexport const FilmsImage = styled.img`\n  border-radius: 10px;\n  width: 100%;\n  height: 100%;\n  transition: box-shadow 0.2s;\n\n  &:hover {\n    box-shadow: 0px 0px 10px #f50057;\n  }\n`;\n\nexport const FilmsTitle = styled.p`\n  position: absolute;\n  bottom: 0px;\n  left: 10px;\n  color: #ffffff;\n  font-weight: bold;\n  font-size: 18px;\n  padding: 0 5px;\n`;\n\nexport const OtherFilmsRating = styled.span`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  background-color: #f50057;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  font-weight: bold;\n  font-size: 18px;\n`;\n","import { useLocation, Link } from 'react-router-dom';\nimport img from '../../Images/No-Image-Placeholder.svg.png';\n\nimport {\n  FilmsItem,\n  FilmsImage,\n  FilmsTitle,\n  FilmsList,\n  OtherFilmsRating,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <FilmsList>\n        {movies.map(({ title, id, poster_path, vote_average }) => {\n          return (\n            <FilmsItem key={id}>\n              <Link to={`/movies/${id.toString()}`} state={{ from: location }}>\n                <FilmsImage\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : { img }\n                  }\n                  alt={title}\n                  width=\"130\"\n                />\n                <OtherFilmsRating>\n                  {parseFloat(vote_average.toFixed(1))}\n                </OtherFilmsRating>\n                <FilmsTitle>\n                  <strong>{title}</strong>\n                </FilmsTitle>\n              </Link>\n            </FilmsItem>\n          );\n        })}\n      </FilmsList>\n    </div>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  margin-top: 100px;\n`;\n\nexport const OtherFilmsContainer = styled.div`\n  padding: 0;\n`;\n\nexport const OtherFilmsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(0, 1fr)); \n  flex-wrap: wrap;\n  gap: 30px 20px;\n  margin-bottom: 80px;\n  justify-items: center;\n  padding: 0 40px;\n`;\n\nexport const OtherFilmsItem = styled.li`\n  position: relative;\n  top: 0;\n  transition: top 0.2s;\n`;\n\nexport const OtherFilmsImage = styled.img`\n  border-radius: 10px;\n  width: 100%;\n  transition: box-shadow 0.2s;\n\n  &:hover {\n    box-shadow: 0px 0px 10px #f50057;\n  }\n`;\n\nexport const OtherFilmsRating = styled.span`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  background-color: #f50057;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  font-weight: bold;\n  font-size: 18px;\n`;\n\nexport const OtherFilmsTitle = styled.p`\n  position: absolute;\n  bottom: 0px;\n  left: 10px;\n  /* width: 40px;\n  height: 40px; */\n  color: #fff;\n  font-weight: bold;\n  font-size: 18px;\n`;\n\n","import React from 'react';\nimport { useEffect, useState } from 'react';\n// import { useLocation, Link } from 'react-router-dom';\nimport { fetchMovies } from '../../api';\nimport MovieList from '../../components/MovieList/MovieList.js';\nimport { Title } from './Home.styled';\n\nexport const Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMoviesHome = async () => {\n      try {\n        const response = await fetchMovies();\n        setMovies(response.data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMoviesHome();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending Movies Today</Title>\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","fetchMovies","params","api_key","fetchForMoviesPage","query","concat","fetchForMoviesDetalis","movieId","fetchCast","fetchReviews","FilmsList","styled","_templateObject","_taggedTemplateLiteral","FilmsItem","_templateObject2","FilmsImage","_templateObject3","FilmsTitle","_templateObject4","OtherFilmsRating","_templateObject5","_ref","movies","location","useLocation","_jsx","children","map","_ref2","title","id","poster_path","vote_average","_jsxs","Link","to","toString","state","from","src","img","alt","width","parseFloat","toFixed","Title","_templateObject6","_templateObject7","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Home","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","fetchMoviesHome","_asyncToGenerator","_callee","response","_context","data","results","t0","console","log","message","apply","arguments","_Fragment","MovieList"],"sourceRoot":""}